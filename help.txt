Ever-evolving cheatsheet for dealing with the bot:

Address the bot either by prefacing with !, or by using its name e.g. "BeerRobot: command"

Parsing order:
    1) Operators
    2) Commands
    3) Factoids

Currently defined operators:
    := define a factoid
    << add to keyword set

Example of keyword and factoid operator usage:

    15:10 < tirtirtir> BeerRobot: shittyplace << Gary, Indiana
    15:10 < BeerRobot> Ok tirtirtir, remembering Gary, Indiana is a shittyplace
    15:10 < tirtirtir> BeerRobot: shittyplace << Valkenvania
    15:10 < BeerRobot> Ok tirtirtir, remembering Valkenvania is a shittyplace
    15:11 < tirtirtir> BeerRobot: shittyplace << The DMV
    15:11 < BeerRobot> Ok tirtirtir, remembering The DMV is a shittyplace
    15:12 < tirtirtir> BeerRobot: vacation := You should go to $shittyplace for your next vacation.
    15:12 < BeerRobot> Ok tirtirtir, remembering vacation -> You should go to $shittyplace for your next vacation.
    15:12 < tirtirtir> vacation
    15:12 < BeerRobot> You should go to Valkenvania for your next vacation.

    Surrounding a keyword in $'s allows you use it inside a word
    eg Abso-$keyword$-lutely!

Special keywords:
    $nick is replaced by the user who sent the message
    $user is replaced by a random user who is active in the channel
    \n is a newline, and will split the reply into multiple lines

    Additionally, up to three passes through keyword processing can happen, so for instance you could define food << $food and $food slurry
    and it should come out okay.

Currently defined commands:
    remember (username) (text to match)
    recall (optional username)
        Recalls a random quote. If username is specified, returns a quote featuring that username
    evaluate
        Returns the latest factoid entered, with keyword processing.
    count (factoid or $keyword to search for)
        Returns the number of entries for the given factoid or keyword.
    findfactoid (text to match)
    findquote (text to match)


